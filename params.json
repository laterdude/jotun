{"name":"Jotun","tagline":"convert javascript object to numerical representation (VSM)","body":"# jotun\r\n\r\nconvert javascript object to numerical 1-D array (vector) representation\r\n\r\n![jotun](https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/Rhinegold_and_the_Valkyries_p_032.jpg/470px-Rhinegold_and_the_Valkyries_p_032.jpg)\r\n\r\nJotun is the (anglicized) term used to describe the race of Giants living in Jotunheimr, one of the nine worlds in Norse mythology.\r\nIn this case it also means Javascript Objects To Numbers (however `jotn` sounded stupid and was only one `u`  away from keeping in line with all the other norse-themed repositories I have).\r\n\r\n## but why????\r\n\r\nWhy on Midgard would you want to turn objects into vectors?\r\n\r\n1. because a vector can be used in machine learning.\r\n\r\nPretty much that's it, but you can also use it for serialization purposes, or even create `ArrayBuffer`s to be used in `TypedArray`s so you can use `DataView`s?\r\n\r\n## usage\r\n\r\nSimple enough:\r\n```\r\nlet jotun = require('jotun'),\r\n  convert = jotun.converter();\r\n\r\nlet vector = convert({ foo: 'bar', quux: [2, 3, 4]});\r\n// print [3, 2, 3, 4]\r\n```\r\n\r\n### default conversion\r\n\r\n`jotun` will turn your objects into vectors with default converters following this behaviour:\r\n\r\n1. numbers will be left untouched (except for NaN and Infinity)\r\n2. strings will be converted to their length\r\n3. booleans will be converted to 1 (true) and 0 (false)\r\n4. Dates will be converted to their getTime() value\r\n5. Objects will be converted to an array in which primitives are converted according to the above\r\n6. undefined will turn to 0\r\n\r\nThe final resulting array will be flattened. \r\n\r\n### custom conversions\r\n\r\nYou may want to cater for special cases, like NaN or Infinity or undefined.\r\nYou can specify a map which defines the conversion behaviour. All you need to do is associate a conversion function for the object property. For instance, `example/example.es6.js` includes a conversion of text into bag-of-words vector representation:\r\n\r\n```\r\nlet jotun = require('../index'),\r\n  mimir = require('mimir');\r\n\r\nlet list = [{\r\n  name: 'joe',\r\n  age: 40,\r\n  dob: new Date(1975, 1, 28),\r\n  description: 'a javascript programmer that loves heavy metal',\r\n  contractor: true,\r\n  code: {\r\n    languages: ['javascript', 'java', 'c++'],\r\n    foo: 'bar'\r\n  }\r\n}, {\r\n  name: 'jack',\r\n  age: 25,\r\n  dob: new Date(1990, 2, 20),\r\n  description: 'an ios programmer that pretends to like jazz',\r\n  contractor: false,\r\n  code: {\r\n    languages: ['objective-c', 'some other hipsteria language', 'ruby'],\r\n    foo: 'bar'\r\n  }\r\n}];\r\n\r\nlet dict = mimir.dict(list.map(o => o.description));\r\n\r\nlet convert = jotun.converter({\r\n  description: description => mimir.bow(description, dict),\r\n  code: jotun.converter({})\r\n});\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}